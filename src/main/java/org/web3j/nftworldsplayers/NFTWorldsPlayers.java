package org.web3j.nftworldsplayers;

import io.reactivex.Flowable;
import io.reactivex.functions.Function;
import java.math.BigInteger;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.concurrent.Callable;
import org.web3j.abi.EventEncoder;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Address;
import org.web3j.abi.datatypes.Bool;
import org.web3j.abi.datatypes.DynamicArray;
import org.web3j.abi.datatypes.DynamicBytes;
import org.web3j.abi.datatypes.DynamicStruct;
import org.web3j.abi.datatypes.Event;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.Utf8String;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.DefaultBlockParameter;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.RemoteFunctionCall;
import org.web3j.protocol.core.methods.request.EthFilter;
import org.web3j.protocol.core.methods.response.BaseEventResponse;
import org.web3j.protocol.core.methods.response.Log;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;
import org.web3j.tx.gas.ContractGasProvider;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 4.9.0.
 */
@SuppressWarnings("rawtypes")
public class NFTWorldsPlayers extends Contract {
    public static final String BINARY = "";

    public static final String FUNC_ASSIGNEDWALLETUUID = "assignedWalletUUID";

    public static final String FUNC_CONVENIENCEGATEWAY = "convenienceGateway";

    public static final String FUNC_GETPLAYERPRIMARYWALLET = "getPlayerPrimaryWallet";

    public static final String FUNC_GETPLAYERSECONDARYWALLETS = "getPlayerSecondaryWallets";

    public static final String FUNC_GETPLAYERSTATEDATA = "getPlayerStateData";

    public static final String FUNC_GETPLAYERSTATEDATABATCH = "getPlayerStateDataBatch";

    public static final String FUNC_ISTRUSTEDFORWARDER = "isTrustedForwarder";

    public static final String FUNC_OWNER = "owner";

    public static final String FUNC_REMOVEPLAYERSECONDARYWALLET = "removePlayerSecondaryWallet";

    public static final String FUNC_REMOVEPLAYERSECONDARYWALLETGASLESS = "removePlayerSecondaryWalletGasless";

    public static final String FUNC_REMOVEPLAYERSTATEDATA = "removePlayerStateData";

    public static final String FUNC_REMOVEPLAYERSTATEDATAGASLESS = "removePlayerStateDataGasless";

    public static final String FUNC_RENOUNCEOWNERSHIP = "renounceOwnership";

    public static final String FUNC_SETCONVENIENCEGATEWAY = "setConvenienceGateway";

    public static final String FUNC_SETPLAYERPRIMARYWALLET = "setPlayerPrimaryWallet";

    public static final String FUNC_SETPLAYERPRIMARYWALLETGASLESS = "setPlayerPrimaryWalletGasless";

    public static final String FUNC_SETPLAYERSECONDARYWALLET = "setPlayerSecondaryWallet";

    public static final String FUNC_SETPLAYERSECONDARYWALLETGASLESS = "setPlayerSecondaryWalletGasless";

    public static final String FUNC_SETPLAYERSTATEDATA = "setPlayerStateData";

    public static final String FUNC_SETPLAYERSTATEDATABATCH = "setPlayerStateDataBatch";

    public static final String FUNC_SETPLAYERSTATEDATABATCHGASLESS = "setPlayerStateDataBatchGasless";

    public static final String FUNC_SETPLAYERSTATEDATAGASLESS = "setPlayerStateDataGasless";

    public static final String FUNC_SETPRIMARYSIGNER = "setPrimarySigner";

    public static final String FUNC_TRANSFEROWNERSHIP = "transferOwnership";

    public static final Event OWNERSHIPTRANSFERRED_EVENT = new Event("OwnershipTransferred", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PLAYERPRIMARYWALLETSET_EVENT = new Event("PlayerPrimaryWalletSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PLAYERSECONDARYWALLETREMOVED_EVENT = new Event("PlayerSecondaryWalletRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PLAYERSECONDARYWALLETSET_EVENT = new Event("PlayerSecondaryWalletSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Address>(true) {}));
    ;

    public static final Event PLAYERSTATEDATAREMOVED_EVENT = new Event("PlayerStateDataRemoved", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    public static final Event PLAYERSTATEDATASET_EVENT = new Event("PlayerStateDataSet", 
            Arrays.<TypeReference<?>>asList(new TypeReference<Address>(true) {}, new TypeReference<Utf8String>(true) {}, new TypeReference<Utf8String>() {}, new TypeReference<Utf8String>() {}));
    ;

    @Deprecated
    protected NFTWorldsPlayers(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected NFTWorldsPlayers(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, credentials, contractGasProvider);
    }

    @Deprecated
    protected NFTWorldsPlayers(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected NFTWorldsPlayers(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        super(BINARY, contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public List<OwnershipTransferredEventResponse> getOwnershipTransferredEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, transactionReceipt);
        ArrayList<OwnershipTransferredEventResponse> responses = new ArrayList<OwnershipTransferredEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, OwnershipTransferredEventResponse>() {
            @Override
            public OwnershipTransferredEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(OWNERSHIPTRANSFERRED_EVENT, log);
                OwnershipTransferredEventResponse typedResponse = new OwnershipTransferredEventResponse();
                typedResponse.log = log;
                typedResponse.previousOwner = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.newOwner = (String) eventValues.getIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<OwnershipTransferredEventResponse> ownershipTransferredEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(OWNERSHIPTRANSFERRED_EVENT));
        return ownershipTransferredEventFlowable(filter);
    }

    public List<PlayerPrimaryWalletSetEventResponse> getPlayerPrimaryWalletSetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PLAYERPRIMARYWALLETSET_EVENT, transactionReceipt);
        ArrayList<PlayerPrimaryWalletSetEventResponse> responses = new ArrayList<PlayerPrimaryWalletSetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PlayerPrimaryWalletSetEventResponse typedResponse = new PlayerPrimaryWalletSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.setWalletAddress = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PlayerPrimaryWalletSetEventResponse> playerPrimaryWalletSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PlayerPrimaryWalletSetEventResponse>() {
            @Override
            public PlayerPrimaryWalletSetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PLAYERPRIMARYWALLETSET_EVENT, log);
                PlayerPrimaryWalletSetEventResponse typedResponse = new PlayerPrimaryWalletSetEventResponse();
                typedResponse.log = log;
                typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.setWalletAddress = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PlayerPrimaryWalletSetEventResponse> playerPrimaryWalletSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PLAYERPRIMARYWALLETSET_EVENT));
        return playerPrimaryWalletSetEventFlowable(filter);
    }

    public List<PlayerSecondaryWalletRemovedEventResponse> getPlayerSecondaryWalletRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PLAYERSECONDARYWALLETREMOVED_EVENT, transactionReceipt);
        ArrayList<PlayerSecondaryWalletRemovedEventResponse> responses = new ArrayList<PlayerSecondaryWalletRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PlayerSecondaryWalletRemovedEventResponse typedResponse = new PlayerSecondaryWalletRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.removedWalletAddress = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PlayerSecondaryWalletRemovedEventResponse> playerSecondaryWalletRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PlayerSecondaryWalletRemovedEventResponse>() {
            @Override
            public PlayerSecondaryWalletRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PLAYERSECONDARYWALLETREMOVED_EVENT, log);
                PlayerSecondaryWalletRemovedEventResponse typedResponse = new PlayerSecondaryWalletRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.removedWalletAddress = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PlayerSecondaryWalletRemovedEventResponse> playerSecondaryWalletRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PLAYERSECONDARYWALLETREMOVED_EVENT));
        return playerSecondaryWalletRemovedEventFlowable(filter);
    }

    public List<PlayerSecondaryWalletSetEventResponse> getPlayerSecondaryWalletSetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PLAYERSECONDARYWALLETSET_EVENT, transactionReceipt);
        ArrayList<PlayerSecondaryWalletSetEventResponse> responses = new ArrayList<PlayerSecondaryWalletSetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PlayerSecondaryWalletSetEventResponse typedResponse = new PlayerSecondaryWalletSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.setWalletAddress = (String) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PlayerSecondaryWalletSetEventResponse> playerSecondaryWalletSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PlayerSecondaryWalletSetEventResponse>() {
            @Override
            public PlayerSecondaryWalletSetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PLAYERSECONDARYWALLETSET_EVENT, log);
                PlayerSecondaryWalletSetEventResponse typedResponse = new PlayerSecondaryWalletSetEventResponse();
                typedResponse.log = log;
                typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.setWalletAddress = (String) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PlayerSecondaryWalletSetEventResponse> playerSecondaryWalletSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PLAYERSECONDARYWALLETSET_EVENT));
        return playerSecondaryWalletSetEventFlowable(filter);
    }

    public List<PlayerStateDataRemovedEventResponse> getPlayerStateDataRemovedEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PLAYERSTATEDATAREMOVED_EVENT, transactionReceipt);
        ArrayList<PlayerStateDataRemovedEventResponse> responses = new ArrayList<PlayerStateDataRemovedEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PlayerStateDataRemovedEventResponse typedResponse = new PlayerStateDataRemovedEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.setterAddress = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PlayerStateDataRemovedEventResponse> playerStateDataRemovedEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PlayerStateDataRemovedEventResponse>() {
            @Override
            public PlayerStateDataRemovedEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PLAYERSTATEDATAREMOVED_EVENT, log);
                PlayerStateDataRemovedEventResponse typedResponse = new PlayerStateDataRemovedEventResponse();
                typedResponse.log = log;
                typedResponse.setterAddress = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PlayerStateDataRemovedEventResponse> playerStateDataRemovedEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PLAYERSTATEDATAREMOVED_EVENT));
        return playerStateDataRemovedEventFlowable(filter);
    }

    public List<PlayerStateDataSetEventResponse> getPlayerStateDataSetEvents(TransactionReceipt transactionReceipt) {
        List<Contract.EventValuesWithLog> valueList = extractEventParametersWithLog(PLAYERSTATEDATASET_EVENT, transactionReceipt);
        ArrayList<PlayerStateDataSetEventResponse> responses = new ArrayList<PlayerStateDataSetEventResponse>(valueList.size());
        for (Contract.EventValuesWithLog eventValues : valueList) {
            PlayerStateDataSetEventResponse typedResponse = new PlayerStateDataSetEventResponse();
            typedResponse.log = eventValues.getLog();
            typedResponse.setterAddress = (String) eventValues.getIndexedValues().get(0).getValue();
            typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(1).getValue();
            typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
            typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
            responses.add(typedResponse);
        }
        return responses;
    }

    public Flowable<PlayerStateDataSetEventResponse> playerStateDataSetEventFlowable(EthFilter filter) {
        return web3j.ethLogFlowable(filter).map(new Function<Log, PlayerStateDataSetEventResponse>() {
            @Override
            public PlayerStateDataSetEventResponse apply(Log log) {
                Contract.EventValuesWithLog eventValues = extractEventParametersWithLog(PLAYERSTATEDATASET_EVENT, log);
                PlayerStateDataSetEventResponse typedResponse = new PlayerStateDataSetEventResponse();
                typedResponse.log = log;
                typedResponse.setterAddress = (String) eventValues.getIndexedValues().get(0).getValue();
                typedResponse.playerUUIDIndex = (byte[]) eventValues.getIndexedValues().get(1).getValue();
                typedResponse.playerUUID = (String) eventValues.getNonIndexedValues().get(0).getValue();
                typedResponse.ipfsHash = (String) eventValues.getNonIndexedValues().get(1).getValue();
                return typedResponse;
            }
        });
    }

    public Flowable<PlayerStateDataSetEventResponse> playerStateDataSetEventFlowable(DefaultBlockParameter startBlock, DefaultBlockParameter endBlock) {
        EthFilter filter = new EthFilter(startBlock, endBlock, getContractAddress());
        filter.addSingleTopic(EventEncoder.encode(PLAYERSTATEDATASET_EVENT));
        return playerStateDataSetEventFlowable(filter);
    }

    public RemoteFunctionCall<String> assignedWalletUUID(String param0) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ASSIGNEDWALLETUUID, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, param0)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> convenienceGateway() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_CONVENIENCEGATEWAY, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<String> getPlayerPrimaryWallet(String _playerUUID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLAYERPRIMARYWALLET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<List> getPlayerSecondaryWallets(String _playerUUID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLAYERSECONDARYWALLETS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Address>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<String> getPlayerStateData(String _playerUUID, String _setterAddress, Boolean includeGateway) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLAYERSTATEDATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                new org.web3j.abi.datatypes.Address(160, _setterAddress), 
                new org.web3j.abi.datatypes.Bool(includeGateway)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Utf8String>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<List> getPlayerStateDataBatch(List<String> _playerUUIDs, String _setterAddress, Boolean includeGateway) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_GETPLAYERSTATEDATABATCH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(_playerUUIDs, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.Address(160, _setterAddress), 
                new org.web3j.abi.datatypes.Bool(includeGateway)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<DynamicArray<Utf8String>>() {}));
        return new RemoteFunctionCall<List>(function,
                new Callable<List>() {
                    @Override
                    @SuppressWarnings("unchecked")
                    public List call() throws Exception {
                        List<Type> result = (List<Type>) executeCallSingleValueReturn(function, List.class);
                        return convertToNative(result);
                    }
                });
    }

    public RemoteFunctionCall<Boolean> isTrustedForwarder(String forwarder) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_ISTRUSTEDFORWARDER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, forwarder)), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Bool>() {}));
        return executeRemoteCallSingleValueReturn(function, Boolean.class);
    }

    public RemoteFunctionCall<String> owner() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(FUNC_OWNER, 
                Arrays.<Type>asList(), 
                Arrays.<TypeReference<?>>asList(new TypeReference<Address>() {}));
        return executeRemoteCallSingleValueReturn(function, String.class);
    }

    public RemoteFunctionCall<TransactionReceipt> removePlayerSecondaryWallet(String _playerUUID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLAYERSECONDARYWALLET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removePlayerSecondaryWalletGasless(String _playerUUID, ForwardRequest _feeForwardRequest, byte[] _feeSignature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLAYERSECONDARYWALLETGASLESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                _feeForwardRequest, 
                new org.web3j.abi.datatypes.DynamicBytes(_feeSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removePlayerStateData(String _playerUUID) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLAYERSTATEDATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> removePlayerStateDataGasless(String _playerUUID, ForwardRequest _feeForwardRequest, byte[] _feeSignature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_REMOVEPLAYERSTATEDATAGASLESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                _feeForwardRequest, 
                new org.web3j.abi.datatypes.DynamicBytes(_feeSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> renounceOwnership() {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_RENOUNCEOWNERSHIP, 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setConvenienceGateway(String _convenienceGateway) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETCONVENIENCEGATEWAY, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_convenienceGateway)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerPrimaryWallet(String _playerUUID, byte[] _signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERPRIMARYWALLET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                new org.web3j.abi.datatypes.DynamicBytes(_signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerPrimaryWalletGasless(String _playerUUID, byte[] _signature, ForwardRequest _feeForwardRequest, byte[] _feeSignature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERPRIMARYWALLETGASLESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                new org.web3j.abi.datatypes.DynamicBytes(_signature), 
                _feeForwardRequest, 
                new org.web3j.abi.datatypes.DynamicBytes(_feeSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerSecondaryWallet(String _playerUUID, byte[] _signature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERSECONDARYWALLET, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                new org.web3j.abi.datatypes.DynamicBytes(_signature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerSecondaryWalletGasless(String _playerUUID, byte[] _signature, ForwardRequest _feeForwardRequest, byte[] _feeSignature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERSECONDARYWALLETGASLESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                new org.web3j.abi.datatypes.DynamicBytes(_signature), 
                _feeForwardRequest, 
                new org.web3j.abi.datatypes.DynamicBytes(_feeSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerStateData(String _playerUUID, String _ipfsHash) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERSTATEDATA, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                new org.web3j.abi.datatypes.Utf8String(_ipfsHash)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerStateDataBatch(List<String> _playerUUIDs, List<String> _ipfsHashes) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERSTATEDATABATCH, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(_playerUUIDs, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(_ipfsHashes, org.web3j.abi.datatypes.Utf8String.class))), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerStateDataBatchGasless(List<String> _playerUUIDs, List<String> _ipfsHashes, ForwardRequest _feeForwardRequest, byte[] _feeSignature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERSTATEDATABATCHGASLESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(_playerUUIDs, org.web3j.abi.datatypes.Utf8String.class)), 
                new org.web3j.abi.datatypes.DynamicArray<org.web3j.abi.datatypes.Utf8String>(
                        org.web3j.abi.datatypes.Utf8String.class,
                        org.web3j.abi.Utils.typeMap(_ipfsHashes, org.web3j.abi.datatypes.Utf8String.class)), 
                _feeForwardRequest, 
                new org.web3j.abi.datatypes.DynamicBytes(_feeSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPlayerStateDataGasless(String _playerUUID, String _ipfsHash, ForwardRequest _feeForwardRequest, byte[] _feeSignature) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPLAYERSTATEDATAGASLESS, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Utf8String(_playerUUID), 
                new org.web3j.abi.datatypes.Utf8String(_ipfsHash), 
                _feeForwardRequest, 
                new org.web3j.abi.datatypes.DynamicBytes(_feeSignature)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> setPrimarySigner(String _primarySigner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_SETPRIMARYSIGNER, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _primarySigner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteFunctionCall<TransactionReceipt> transferOwnership(String newOwner) {
        final org.web3j.abi.datatypes.Function function = new org.web3j.abi.datatypes.Function(
                FUNC_TRANSFEROWNERSHIP, 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, newOwner)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    @Deprecated
    public static NFTWorldsPlayers load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new NFTWorldsPlayers(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    @Deprecated
    public static NFTWorldsPlayers load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new NFTWorldsPlayers(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static NFTWorldsPlayers load(String contractAddress, Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider) {
        return new NFTWorldsPlayers(contractAddress, web3j, credentials, contractGasProvider);
    }

    public static NFTWorldsPlayers load(String contractAddress, Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider) {
        return new NFTWorldsPlayers(contractAddress, web3j, transactionManager, contractGasProvider);
    }

    public static RemoteCall<NFTWorldsPlayers> deploy(Web3j web3j, Credentials credentials, ContractGasProvider contractGasProvider, String _forwarder, String _convenienceGateway) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _forwarder), 
                new org.web3j.abi.datatypes.Utf8String(_convenienceGateway)));
        return deployRemoteCall(NFTWorldsPlayers.class, web3j, credentials, contractGasProvider, BINARY, encodedConstructor);
    }

    public static RemoteCall<NFTWorldsPlayers> deploy(Web3j web3j, TransactionManager transactionManager, ContractGasProvider contractGasProvider, String _forwarder, String _convenienceGateway) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _forwarder), 
                new org.web3j.abi.datatypes.Utf8String(_convenienceGateway)));
        return deployRemoteCall(NFTWorldsPlayers.class, web3j, transactionManager, contractGasProvider, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<NFTWorldsPlayers> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _forwarder, String _convenienceGateway) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _forwarder), 
                new org.web3j.abi.datatypes.Utf8String(_convenienceGateway)));
        return deployRemoteCall(NFTWorldsPlayers.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    @Deprecated
    public static RemoteCall<NFTWorldsPlayers> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _forwarder, String _convenienceGateway) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(160, _forwarder), 
                new org.web3j.abi.datatypes.Utf8String(_convenienceGateway)));
        return deployRemoteCall(NFTWorldsPlayers.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static class ForwardRequest extends DynamicStruct {
        public String from;

        public String to;

        public BigInteger value;

        public BigInteger gas;

        public BigInteger nonce;

        public byte[] data;

        public ForwardRequest(String from, String to, BigInteger value, BigInteger gas, BigInteger nonce, byte[] data) {
            super(new org.web3j.abi.datatypes.Address(160, from), 
                    new org.web3j.abi.datatypes.Address(160, to), 
                    new org.web3j.abi.datatypes.generated.Uint256(value), 
                    new org.web3j.abi.datatypes.generated.Uint256(gas), 
                    new org.web3j.abi.datatypes.generated.Uint256(nonce), 
                    new org.web3j.abi.datatypes.DynamicBytes(data));
            this.from = from;
            this.to = to;
            this.value = value;
            this.gas = gas;
            this.nonce = nonce;
            this.data = data;
        }

        public ForwardRequest(Address from, Address to, Uint256 value, Uint256 gas, Uint256 nonce, DynamicBytes data) {
            super(from, to, value, gas, nonce, data);
            this.from = from.getValue();
            this.to = to.getValue();
            this.value = value.getValue();
            this.gas = gas.getValue();
            this.nonce = nonce.getValue();
            this.data = data.getValue();
        }
    }

    public static class OwnershipTransferredEventResponse extends BaseEventResponse {
        public String previousOwner;

        public String newOwner;
    }

    public static class PlayerPrimaryWalletSetEventResponse extends BaseEventResponse {
        public byte[] playerUUIDIndex;

        public String setWalletAddress;

        public String playerUUID;
    }

    public static class PlayerSecondaryWalletRemovedEventResponse extends BaseEventResponse {
        public byte[] playerUUIDIndex;

        public String removedWalletAddress;

        public String playerUUID;
    }

    public static class PlayerSecondaryWalletSetEventResponse extends BaseEventResponse {
        public byte[] playerUUIDIndex;

        public String setWalletAddress;

        public String playerUUID;
    }

    public static class PlayerStateDataRemovedEventResponse extends BaseEventResponse {
        public String setterAddress;

        public byte[] playerUUIDIndex;

        public String playerUUID;

        public String ipfsHash;
    }

    public static class PlayerStateDataSetEventResponse extends BaseEventResponse {
        public String setterAddress;

        public byte[] playerUUIDIndex;

        public String playerUUID;

        public String ipfsHash;
    }
}
