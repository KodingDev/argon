/*
 * This Kotlin source file was generated by the Gradle 'init' task.
 */
package dev.koding.argon

import com.kotlindiscord.kord.extensions.ExtensibleBot
import com.kotlindiscord.kord.extensions.checks.userFor
import dev.koding.argon.data.config
import dev.koding.argon.extensions.ClockifyExtension
import dev.koding.argon.extensions.FilterExtension
import dev.koding.argon.metrics.MetricManager
import dev.kord.common.Color
import dev.kord.rest.builder.message.create.embed

suspend fun main() {
    configureMetrics()

    val bot = ExtensibleBot(config.discord.token) {
        applicationCommands {
            enabled = true
            config.discord.guildId?.let { defaultGuild(it) }

            config.discord.ownerId?.let {
                slashCommandCheck {
                    failIf { userFor(event)?.id?.asString?.equals(it) != true }
                }
            }
        }

        errorResponse { message, _ ->
            embed {
                color = Color(0xef5350)
                description = message
            }
        }

        extensions {
            add(::ClockifyExtension)
            add(::FilterExtension)
        }

        config.discord.status?.let { s ->
            presence {
                when (s.type.lowercase()) {
                    "watching" -> watching(s.text)
                    "listening" -> listening(s.text)
                    else -> playing(s.text)
                }
            }
        }
    }

    bot.start()
}

fun configureMetrics() {
    val manager = MetricManager()
    manager.start()
}